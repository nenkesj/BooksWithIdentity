@model (string workflow, string theme)
@inject UserManager<IdentityUser> UserManager
@{
    Func<string, string> getClass = (string feature) =>
        feature != null && feature.Equals(Model.workflow) ? "active" : "";
    IdentityUser identityUser
        = await UserManager.GetUserAsync(User) ?? new IdentityUser();
}
<a class="btn btn-@Model.theme btn-block @getClass("Overview")" asp-page="Index">
    Overview
</a>
<br />
@if (await UserManager.HasPasswordAsync(identityUser))
{
    <a class="m-1 btn btn-@Model.theme btn-block @getClass("PasswordChange")"
   asp-page="UserPasswordChange">
        Change Password
    </a>
    <br />
    <a class="m-1 btn btn-@Model.theme btn-block @getClass("UserTwoFactor")"
   asp-page="UserTwoFactorManage">
        Authenticator
    </a>
    <br />
}
<!--
<a class="m-1 btn btn-Model.theme btn-block getClass("UserDelete")"
   asp-page="UserDelete">
    Delete Account
</a>
-->
