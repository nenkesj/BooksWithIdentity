@model BookListViewModel
@{
    ViewData["Title"] = "Home Page";
}

<!--
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <h4 class="bg-primary text-white text-center p-2">MVC - Level 2 - Signed In Users</h4>

</div>
<h6 class="bg-secondary text-white text-center m-2 p-2">Books</h6>
-->
<form asp-action="Index" asp-controller="Books" method="get" asp-route-searchtext="@Model.SearchText">
    <dl class="row">
        <dt class="col-sm-1">
            <label asp-for="SearchText" class="control-label">Search For</label>
        </dt>
        <dd class="col-sm-10">
            <textarea rows="1" asp-for=SearchText class="form-control"></textarea>
        </dd>
        <dd class="col-sm-1">
            <input type="image" name="Search" id="Search" src="~/images/Icons/Search1.png" />
        </dd>
    </dl>
</form>
<form asp-action="NewBook" asp-controller="Admin" method="get">
    <button class="navbutton, btn, btn-info" type="submit">New Book</button>
</form>
<div class="m-2">
    <table class="table table-sm table-striped table-bordered">
        <thead>
            <tr>
                <th></th>
                <th>Book</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model.Nodes ?? Enumerable.Empty<Node>())
            {
                <!-- <partial name="_BookRowPartial" model="p" />  -->
                <tr>
                    <td>
                        <a class="btn btn-sm btn-info text-white" asp-action="Details"
                           asp-controller="Books" asp-route-id="@p.NodeId" asp-route-searchtext="@Model.SearchText">
                            View
                        </a>
                    </td>
                    <td>@p?.Heading</td>
                    @if(Model.SearchText == "")
                    {
                        @if (p?.NodeText.Length <= 100)
                        {
                            <td>@p?.NodeText</td>
                        }
                        else
                        {
                            <td>@p?.NodeText.Substring(0, 100) ...</td>
                        }
                    }
                    else
                    {
                        @if (p?.NodeText.Substring(p.NodeText.IndexOf(Model.SearchText, StringComparison.InvariantCultureIgnoreCase)).Length <= 100)
                        {
                            <td>@p?.NodeText.Substring(p.NodeText.IndexOf(Model.SearchText, StringComparison.InvariantCultureIgnoreCase))</td>
                        }
                        else
                        {
                            <td>@p?.NodeText.Substring(p.NodeText.IndexOf(Model.SearchText, StringComparison.InvariantCultureIgnoreCase), 100) ...</td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
</div>